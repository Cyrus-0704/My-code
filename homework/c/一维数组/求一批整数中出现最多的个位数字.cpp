/*给定一批整数，分析每个整数的每一位数字，求出现次数最多的个位数字。例如给定3个整数1234、2345、3456，其中出现最多次数的数字是3和4，均出现了3次。

输入格式：
输入在第1行中给出正整数N（≤1000），在第二行中给出N个不超过整型范围的非负整数，数字间以空格分隔。

输出格式：
在一行中按格式“M: n1 n2 ...”输出，其中M是最大次数，n1、n2、……为出现次数最多的个位数字，按从小到大的顺序排列。数字间以空格分隔，但末尾不得有多余空格。

输入样例：
3
1234 2345 3456
输出样例：
3: 3 4*/
#include <stdio.h>
int main()
{
    int time[10] = {0}; // 用于计算每个个位数字出现的次数
    int n, m;
    scanf("%d", &n);
    int z[n];
    for (int i = 0; i < n; i++) // 输入n个整数并存入z数组中
    {
        scanf("%d ", &m);
        z[i] = m;
    }
    for (int i = 0; i < n; i++) // 处理这些数
    {
        int k = z[i];
        if (k == 0)
        {
            time[0]++;
        }
        while (k > 0)
        {
            time[k % 10]++;
            k /= 10;
        }
    }
    int M = time[0]; // M用于储存次数最多的个位数字的次数
    for (int i = 1; i < 10; i++)
    {
        if (time[i] > M)
        {
            M = time[i];
        }
    }
    printf("%d:", M);
    for (int i = 0; i < 10; i++)
    {
        if (time[i] == M)
        {
            printf(" %d", i);
        }
    }
    return 0;
}